# Triggers the Lumenier_build workflow in the Betaflight repo
# Adding comment
name: Lumenier_workflow_dispatch

on: 
  push:

jobs:
  trigger_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Send Dispatch Event
        run: |
          # Define variables
          branch_name="${GITHUB_REF#refs/heads/}"
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)

          # Read targets from JSON file and ensure it's properly formatted
          if [ -f ./LUMENIER_TARGETS.json ]; then
            target_list=$(jq -c -r @json ./LUMENIER_TARGETS.json)
          else
            echo "Cannot find LUMENIER_TARGETS.json file. Defaulting to empty list."
            target_list="[]"
          fi

          json_payload=$(jq -n \
            --arg branch_name "$branch_name" \
            --arg target_list "$target_list" \
            --arg identifier "$SHORT_SHA" \
            '{"ref": "WORKFLOW_TEST", "inputs": {"branch_name": $branch_name, "target_list": $target_list, "identifier": $identifier}}')

          echo "Generated JSON payload: $json_payload"

          # Send request
          response=$(curl -s -w "%{http_code}" -X POST -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
            --data "$json_payload" \
            https://api.github.com/repos/lumenier-development/betaflight/actions/workflows/lumenier_build.yml/dispatches)

          # Extract HTTP status code from the response
          http_status="${response: -3}"
          body="${response%${http_status}}"
          echo "Full response: $body"
          echo "HTTP status code: $http_status"
          
          if [ "$http_status" -eq 204 ]; then
            echo "Workflow dispatch was successful."
            echo "Sleeping for 10 seconds to allow workflow to start..."
            sleep 10

            # Poll for the latest workflow run ID
            echo "Polling for the latest workflow run ID..."
            runs_response=$(curl -s -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
              "https://api.github.com/repos/lumenier-development/betaflight/actions/workflows/lumenier_build.yml/runs")
            
            # Extract the ID of the latest run, handle empty response
            last_run_id=$(echo $runs_response | jq -r '.workflow_runs[0].id')
            if [ "$last_run_id" != "null" ]; then
              echo "Last workflow run ID: $last_run_id"
              
              status="queued"
              while [[ "$status" == "in_progress" || "$status" == "queued" ]]; do
                echo "Workflow status: $status. Checking again in 10 seconds..."
                sleep 10

                # Check the status of the latest run
                status_response=$(curl -s -H "Authorization: token ${{ secrets.REPO_TOKEN }}" \
                  "https://api.github.com/repos/lumenier-development/betaflight/actions/runs/$last_run_id")

                status=$(echo $status_response | jq -r '.status')
                conclusion=$(echo $status_response | jq -r '.conclusion')
              done

              echo "Workflow finished with conclusion: $conclusion"
            else
              echo "No workflow run found after dispatch."
              exit 1  
            fi
          else
            echo "Error triggering workflow!"
            exit 1
          fi
